apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgresname }}-secret-user
data:
  password: {{ .Values.passworduser }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgresname }}-secret-root
data:
  password: {{ .Values.passwordroot }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: storage-{{ .Values.postgresname }}
spec:
 accessModes:
  - {{ .Values.accessmodespostgres }}
 resources:
   requests:
        storage: {{ .Values.storagepostgres }}
storageClassName: {{ .Values.storageClassName }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
 name: storage-{{ .Values.odooname }}
spec:
 accessModes:
  - {{ .Values.accessmodesodoo }}
 resources:
   requests:
        storage: {{ .Values.storageodoo }}
storageClassName: {{ .Values.storageClassName }}

---

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.postgresname }}
  name: {{ .Values.postgresname }}
spec:
  replicas: 1
  selector:
    app: {{ .Values.postgresname }}
    deploymentconfig: {{ .Values.postgresname }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresname }}
        deploymentconfig: {{ .Values.postgresname }}
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresname }}-secret-root
                  key: password
          image: {{ .Values.imagepostgres }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: {{ .Values.postgresname }}
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              readOnly: false
              name: volume-{{ .Values.postgresname }}
      volumes:
        - name: volume-{{ .Values.postgresname }}
          persistentVolumeClaim:
            claimName: storage-{{ .Values.postgresname }}
      restartPolicy: {{ .Values.restartPolicy }}

---

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: {{ .Values.odooname }}
  name: {{ .Values.odooname }}
spec:
  replicas: 1
  selector:
    app: {{ .Values.odooname }}
    deploymentconfig: {{ .Values.odooname }}
  template:
    metadata:
      labels:
        app: {{ .Values.odooname }}
        deploymentconfig: {{ .Values.odooname }}
    spec:
      containers:
        - env:
            - name: PSQL_HOST
              value: {{ .Values.postgresname }}
            - name: PSQL_PORT
              value: "5432"
            - name: PSQL_USER
              value: odoo
            - name: PSQL_USER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresname }}-secret-user
                  key: password
            - name: PSQL_ROOT_USER
              value: postgres
            - name: PSQL_ROOT_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresname }}-secret-root
                  key: password
          image: {{ .Values.imageodoo }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          name: {{ .Values.odooname }}
          ports:
            - containerPort: 8069
              protocol: TCP
          volumeMounts:
            - mountPath: /home/
              readOnly: false
              name: volume-{{ .Values.odooname }}
      volumes:
        - name: volume-{{ .Values.odooname }}
          persistentVolumeClaim:
            claimName: storage-{{ .Values.odooname }}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: registry
      restartPolicy: {{ .Values.restartPolicy }}

---

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ .Values.nginxname }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.nginxname }}
    spec:
      containers:
      - name: {{ .Values.nginxname }}
        image: {{ .Values.imagenginx }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: registry
      restartPolicy: Always

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
 labels:
   app: {{ .Values.nginxname }}
 name: {{ .Values.nginxname }}
spec:
 host: {{ .Values.host }}
 port:
   targetPort: 80-tcp
 to:
   kind: Service
   name: {{ .Values.nginxname }}
   weight: 100
 wildcardPolicy: None
status:
 ingress:
   - conditions:
     host: {{ .Values.host }}
     routerName: router
wildcardPolicy: None

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.nginxname }}
  name: {{ .Values.nginxname }}
spec:
  clusterIP: None
  ports:
  - name: 80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    deploymentconfig: {{ .Values.nginxname }}
  sessionAffinity: None
  type: ClusterIP
status:
loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ .Values.postgresname }}
  name: {{ .Values.postgresname }}
spec:
  clusterIP: None
  ports:
  - name: 5432-tcp
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    deploymentconfig: {{ .Values.postgresname }}
  sessionAffinity: None
  type: ClusterIP
status:
loadBalancer: {}
